version: '3.8'

services:
  app:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=${DATABASE_URL:-sqlite:///./hr_assistant.db}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
      - SECRET_KEY=${SECRET_KEY:-change-this-secret-key-in-production}
      - ENVIRONMENT=${ENVIRONMENT:-production}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-*}
      - GOOGLE_SEARCH_API_KEY=${GOOGLE_SEARCH_API_KEY:-}
      - GOOGLE_SEARCH_ENGINE_ID=${GOOGLE_SEARCH_ENGINE_ID:-}
      - SENDGRID_API_KEY=${SENDGRID_API_KEY:-}
      - FROM_EMAIL=${FROM_EMAIL:-noreply@example.com}
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
      - ./results:/app/results
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:14-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-hr_assistant_db}
      - POSTGRES_USER=${POSTGRES_USER:-hr_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-change-this-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-hr_user}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data:
